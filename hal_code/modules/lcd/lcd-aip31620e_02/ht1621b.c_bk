#include "ht1621b.h"
#include <stdint.h>
#include "sys_utils.h"
#include <string.h>
#include "driver_gpio.h"
#include "driver_iomux.h"
#include "driver_pmu.h"

__attribute__((section("ram_code"))) void cpu_delay1(uint32_t ulCount)
{
    __asm volatile(
                " 1: subs   %0, #1  \n"
                " bne       1b      \n"
                :
                :"r"(ulCount)
                :
                );
}

__attribute__((section("ram_code"))) void co_delay_1us(uint32_t num)
{
    volatile uint32_t threshold;
    uint8_t pclk_cfg;

    if(num == 0) {
        return;
    }

    pclk_cfg = system_get_pclk_config();

    threshold = 1 * num;
    if(pclk_cfg == 24) {
        threshold <<= 1;
    }
    else if(pclk_cfg == 48) {
        threshold <<= 2;
    }

    cpu_delay1(threshold);
}

#define LCD_CS_H()		pmu_set_gpio_value(GPIO_PORT_A, BIT(4), 1);
#define LCD_CS_L()		pmu_set_gpio_value(GPIO_PORT_A, BIT(4), 0);
#define LCD_WR_H()		pmu_set_gpio_value(GPIO_PORT_A, BIT(0), 1);
#define LCD_WR_L()		pmu_set_gpio_value(GPIO_PORT_A, BIT(0), 0);
#define LCD_DA_H()		pmu_set_gpio_value(GPIO_PORT_A, BIT(1), 1);
#define LCD_DA_L()		pmu_set_gpio_value(GPIO_PORT_A, BIT(1), 0);


void ht1621b_pin_init(void)
{	

	pmu_set_port_mux(GPIO_PORT_A,GPIO_BIT_0|GPIO_BIT_1|GPIO_BIT_4,PMU_PORT_MUX_GPIO);
	pmu_set_pin_to_PMU(GPIO_PORT_A,BIT(0)|BIT(1)|BIT(4) );
	pmu_set_pin_dir(GPIO_PORT_A,BIT(0)|BIT(1)|BIT(4), GPIO_DIR_OUT);	
    system_set_port_pull(GPIO_PA0|GPIO_PA1|GPIO_PA4,true);
	pmu_set_gpio_value(GPIO_PORT_A, BIT(0)|BIT(1)|BIT(4), 1);
	
}

void ht1621b_pin_release(void)
{

	LCD_CS_H();
	//LCD_RD_H();
	LCD_WR_H();
	LCD_DA_H();
}


void CS_pin_test(void)
{
	LCD_CS_H();
}


void ht1621_sendbit_high(uint8_t data , uint8_t cnt)
{
	uint8_t i ;
	for(i = 0; i< cnt ; i++)
	{
		LCD_WR_L();
		if((data&0x80)==0){
			LCD_DA_L();
		}
		else{
			LCD_DA_H();
		}
		LCD_WR_H();
		data<<=1;
	}
}

void ht1621_sendbit_low(uint8_t data , uint8_t cnt)
{
	uint8_t i ;
	for(i = 0; i< cnt ; i++)
	{
		LCD_WR_L();
		//co_delay_10us(1);
		if((data&0x01)==0){
			LCD_DA_L();
		}
		else{
			LCD_DA_H();
		}
		LCD_WR_H();
		data>>=1;
	}
}

void ht1621_SendCmd(uint8_t command)
{
	LCD_CS_L();
	//co_delay_10us(3);
	ht1621_sendbit_high(0x080,4);		//  100  write
	ht1621_sendbit_high(command , 8) ;  // 
	LCD_CS_H();
}

void ht1621_WriteByte(uint8_t addr , uint8_t data)
{
	LCD_CS_L();
	//co_delay_10us(3);
	ht1621_sendbit_high(0xa0,3);
	ht1621_sendbit_high(addr<<2 , 6);
	ht1621_sendbit_low(data,4);
	LCD_CS_H(); 
}

void ht1621_WriteData(uint8_t addr ,uint8_t *pdata  , uint8_t cnt)
{
	uint8_t i = 0;
	LCD_CS_L();
	//co_delay_10us(3);
	ht1621_sendbit_high(0xa0,3);
	ht1621_sendbit_high(addr<<2 , 6);
	for(i = 0;i<cnt;i++,pdata++){
		ht1621_sendbit_low(*pdata,8);
	}
	LCD_CS_H(); 	
}	











